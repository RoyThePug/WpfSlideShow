<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:imageItemsContainer="clr-namespace:WpfSlideShow.CustomControl.ImageItemsContainer"
                    xmlns:collections="clr-namespace:System.Collections;assembly=System.Runtime">

    <ControlTemplate x:Key="newImageButtonTemplate" TargetType="{x:Type Button}">
        <Border Name="bd"
                BorderBrush="Transparent"
                Padding="5,5,5,5"
                CornerRadius="2"
                BorderThickness="1">
            <TextBlock>default</TextBlock>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="bd" Property="Background" Value="#404040" />
                <Setter TargetName="bd" Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="White"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="1" Background="#c8c8c8"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                            Height="8" Margin="0,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="defaultScroolBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="10" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="10" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="ScrollBar.LineLeftCommand"
                                              Margin="-20,0,0,0"
                                              Style="{StaticResource ScrollBarLineButton}"
                                              Content="M 1,0.333334L 0,0.333334L 0,1.33333L 5.59867,8.83333L 0,16.3333L 0,17.3333L 1,17.3333L 7,9.33333L 7,8.33333" 
                                              Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <RotateTransform Angle="-180" />
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand"
                                              Style="{StaticResource ScrollBarLineButton}"
                                              Margin="0,0,-20,0"
                                              Content="M 1,0.333334L 0,0.333334L 0,1.33333L 5.59867,8.83333L 0,16.3333L 0,17.3333L 1,17.3333L 7,9.33333L 7,8.33333" 
                                              Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <!-- <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False"> -->
                                <!--     <Track.DecreaseRepeatButton> -->
                                <!--         <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" /> -->
                                <!--     </Track.DecreaseRepeatButton> -->
                                <!--     <Track.Thumb> -->
                                <!--         <Thumb Style="{StaticResource ScrollBarThumbHor}" Margin="0,1,0,1"  /> -->
                                <!--     </Track.Thumb> -->
                                <!--     <Track.IncreaseRepeatButton> -->
                                <!--         <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" /> -->
                                <!--     </Track.IncreaseRepeatButton> -->
                                <!-- </Track> -->
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="customScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter
                            CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Style="{StaticResource defaultScroolBar}"
                                   Orientation="Horizontal"
                                   Value="{ TemplateBinding HorizontalOffset}"
                                   Maximum="{ TemplateBinding ScrollableWidth}"
                                   ViewportSize="{ TemplateBinding ViewportWidth}"
                                   Cursor="Arrow"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Visibility="{ TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type imageItemsContainer:ImageItemsControl}">
        <Setter Property="NewImageButtonTemplate" Value="{StaticResource newImageButtonTemplate}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type imageItemsContainer:ImageItemsControl}">
                    <Grid x:Name="ROOT_Element" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <AdornerDecorator>
                            <Grid x:Name="PART_Grid_SelectedView" Margin="0,0,0,2">
                                <Image x:Name="PART_SelectedImage" Source="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}"
                                       Stretch="Fill">
                                </Image>
                                <Button x:Name="PART_RemoveButton" Template="{Binding RemoveButtonTemplate, RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}"
                                        VerticalAlignment="Top" HorizontalAlignment="Right"
                                        Visibility="Hidden"
                                        Command="{Binding RemoveImageCommand,RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}">
                                </Button>
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseEnter">
                                        <b:ChangePropertyAction TargetName="PART_RemoveButton" PropertyName="Visibility" Value="Visible" />
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="MouseLeave">
                                        <b:ChangePropertyAction TargetName="PART_RemoveButton" PropertyName="Visibility" Value="Hidden" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Grid>
                        </AdornerDecorator>
                        <Grid Grid.Row="1" Margin="0,0,0,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Template="{Binding NewImageButtonTemplate , RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}"
                                    Command="{Binding AddImageCommand,RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}"
                                    HorizontalAlignment="Left" Margin="0" />
                            <Grid Grid.Column="1" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ItemsControl Grid.Column="1" x:Name="PART_ItemsControl"
                                              ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType=imageItemsContainer:ImageItemsControl}}">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="ItemsControl">
                                            <ScrollViewer x:Name="PART_ScroolViewer"
                                                          Style="{StaticResource customScrollViewer}"
                                                          CanContentScroll="False"
                                                          VerticalScrollBarVisibility="Hidden"
                                                          HorizontalScrollBarVisibility="Auto"
                                                          Padding="{TemplateBinding Padding}"
                                                          Focusable="False">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"
                                                        ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                                        ScrollViewer.CanContentScroll="True" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </Grid>
                    <!-- <ControlTemplate.Triggers> -->
                    <!--     <Trigger SourceName="ROOT_Element" Property="IsMouseOver" Value="True"> -->
                    <!--         <Setter TargetName="PART_RemoveButton" Property="Visibility" Value="Visible"></Setter> -->
                    <!--     </Trigger> -->
                    <!-- </ControlTemplate.Triggers> -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>